Lectures were completely unnecessary and so were the lab sessions.  As long as you read the book and complete the assignments, it's an easy A.  If you have a good TA, then it's really easy.
Professor Miles is awesome! Lectures aren't necessary at all but I ended up going just because I liked professor Miles so much. He is funny and brings in entertaining guest speakers all the time. All coding is done with TA but if you have a good ta it isn't bad. I really enjoyed this class!
Class is split into 2 sections--Arnie teaches 1 lecture about the history of computers each week and then a TA teaches 1 lecture of coding in HTMLJavascript. Lecture is not really mandatory but interesting, and he posts online quizzes (you can use google). Homework is graded on effort and there are 4 projects, but no final. Easy, fun intro class.
Arnie's a top lad. He tries his best to make a relatively stale topic interesting. Not hard to get an A if you do ALL of the quizzes, which are fairly easy. Grade is also super dependent on your TA. I lucked out.
One of the best profs I've had at Georgetown. Accept that it's a programming class, and that no one can teach you code - you have to work it out yourself. That said, Arnie is open, caring, and very helpful. Workload is appropriate for the material. Grading is lenient. An 'A' is very doable if you put in the effort.
Pretty boring professor. Goes over the history of computers in lecture, but its all pretty basic. Guest lectures can be good. Homework isn't that bad, but it is a lot of coding. If you have a nice TA, you don't need to do all the homework. Exams are easy. Overall, a pretty easy intro class, but not particularly interesting.
Prof Miles is a great guy and does his best to take pretty dry stuff and make it interesting. Guest speakers are for the most part good.WAY TOO MUCH WORK for intro class if you aren't into programming don't take the bulk of the grades are programming not lecture. midterm and final open book, but your experience depends more on TA then Prof miles
Is good at teaching the history of computer science in lecture, and the midterm/final are super easy because they're open note Programming (and programming final) is difficult, and is mostly self-taught out of the book. TA's not that helpful in lab, but are good for office hours.
Lectures and guest speakers are interesting, but pretty time consuming for an intro class. You will need to spend a good 3 or 4 hours on programming every week, and even more on projects (maybe it's just me) but you do learn a lot too. Midterm is open book, all MCQ and rather easy. Don't make your TA hate you and you'll do fine
If you value your time and your georgetown experience, dont take this class!
Hilarious and sarcastic man. Put in the work, read the book and do the reading notes (exercises) and you'll do great. Projects are fun, but time consuming. Getting an A requires just a little investment of time and brain power, so don't slack off at the beginning. Do the extra credit options! And guest lectures were actually pretty good and funny.
Nice, outgoing man. Put in the work and read the book. You'll get an A. Extra credit opportunities makes it even better. Easy class, accessible TAs and professor. I had Jess C. He was very helpful. Lectures were interesting but not all that useful. Workload isn't bad. You have to teach yourself programming. Quizzes straight from slides. Recommended
I loved this course. It is extremely possible to get a 100%, and if you do all the work, you are basically guaranteed an A. Arnie tries to be funny, and he really likes to talk to the students and ask them how they feel about things. TA was wonderful, and understanding, too.
This is a great class! Arnie is a terrific teacher, he is clearly very intelligent and he makes lecutres exciting.  The class guidlines and grading are clearly set and as long as you follow them and make sure to KEEP TRACK OF DEADLINES the workload is not bad at all.  Anyone who puts in the time can do very well in this class.
Lots of homework, but as long as you do it you will get full credit for it. It takes a lot of time but isn't too difficult. The midterm on the lecture information and the final programming project are difficult, but the in-class programming exam is really easy. As long as you're willing  to put in the time, you'll probably get a good grade.
No one can teach you how to program- you learn it by going through the exercises and doing it yourself. Your grade is directly correlated to how much time you spend on the material, which is straightforward. The exercises are easy but time consuming, entire midterm taken directly from lecture notes. Lots of extracredit available- do it.
I love the course. TAs are very helpful. But the workload is too much for an intro class. Also, the lectures are very unclear. TAs are very free to do pretty much what they want, and sometimes, all you do is figure EVERYTHING out by yourself. When you really need help, it's hard to find it, unless you've made about ten friends to help each other ou
If you are organized and hardworking, you will get an A. If you try to coast, you will fail. This course makes you spend time on assignments, so its up to you. The programming can be overwhelming, but it is manageable. The lecture-based tests are very difficult, however, so do all the extra credit.
Although the homework for this class is very easy, there is just too much of it. Nobody goes over what exactly is wrong in your code or how you can improve it, so it's very difficult to learn from your mistakes. He should really cut back on how many chapters he assigns. Tests involve nitpicky details. He is a really nice guy, but not an easy class.
Admits that lectures are boring, and does try to lighten things up.  Interesting guy.  Programming assignments are numerous and tedious but it gets better the second half of the semester.  So many opportunities for extra-credit and extra help with programming, even if you're bad at programming (like me) you can get an A.
