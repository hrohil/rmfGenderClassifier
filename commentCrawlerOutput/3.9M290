Took his data structure course. Although his grading is tough, Dr. Froehlich gives really good lectures, clear homework instructions and helpful feedbacks.
Hardest class I've taken thus far. Lectures were insightful and directly helped you on the homework if you paid attention. He comes off angry when answering questions, but that's normally him trying to understand your question. Also, don't ask dumb questions. If you can google it easily, do that.
Great and knowledgeable professor. Exams are pretty easy with his backtests being a really good indicator of what to expect. Assignments are long and arduous but doable. Pretty clear grading expectations, its just hard. Only complaint is that he isn't the most approachable guy both in person and online. Learned a lot from Peter regardless.
Peter is an awesome professor.
Homework assignments, though numerous, are useful and even a bit challenging at times (in a good sense). Our class did not get to the 10th assignment, but this was out of Peter's control. He is very good about providing clear homework directions. Exams are a breeze since most questions are straight from the backtests (which he provides).
Compilers was great. Fun course, difficult but I learned a lot. :D
abrasive. lectures are inadequate to prepare u for the challenging assignments.
Projects are inspiring and a good use of students time, as they are challenging. However, the quality of teaching is unfortunately lacking compared to the level of difficulty the projects and homeworks hold. JHU is not ready to be a top CS school, because our professors are not great teachers. Sadly, Peter Froehlich is not an exception to this. D+.
Lectures were boring and not too informative. Peter is great at contacting back students and being active on Piazza, but is quite abrasive in his interactions and not a people person. Course assignments are quite outdated by now (still using 32-bit and old architectures). Final exam was a repeat of a lot of quiz questions, so that was nice.
You will not learn Data Structures. Instead you learn how to pass Peter's exams. Peter came unprepared for the lectures many time, and so we were behind this semester. We had 7 projects listed but only got to 5. Quizzes were not straight-forward. Grading of projects is done by TAs/CAs, very arbitrarily. Take CS226 with another prof, or over summer.
He will ruin your GPA history and let you see how mean the real world to you
Nearly ten years since I first took Peter's class, I still look back at it as the first time I was challenged to produce professional quality (or as close as I could manage at the time) code.  Peter's assignments are *hard*, but he takes time to make them interesting and works with you throughout the assignment offering clarifications, advice, etc.
This course is based on really specific material - programming Unix systems, but the skills learned are broadly applicable within CS.  This is also a great preparation course for the OS course. This course gave me a fundamental understanding of working in Unix, which has also been applicable to other OSes.
Peter is a fantastic professor.  This course provided the foundation for my programming and engineering learning, and thus my career to date.  I strongly recommend students take classes with Peter.  Take the course seriously, and you will get a lot out of it.
If you really want to learn Compilers, you have to teach yourself, but Peter provides the structure to do so. The assignments are well-paced and structured so you learn the important concepts, and at the end of the class he add some bonus sections. Expect to do a lot of programming, but if you do your work, Peter is not a harsh grader.
Peter was far and away my favorite professor at Hopkins; I purposefully took 3+ classes with him. Be ready to work, but if you bust your tail, do all of the assignments, &amp; understand the material you are guaranteed an A. Tests don't really matter, assignments do. He is always there for extra help, and incredibly knowledgeable on the subject matter.
Trust me, if you really want to learn CS, if you want to be challenged, you neeeed to take this man's class! He won't make it easy, but that's the point isn't it - to actually learn. He's an amazing lecturer, and probably the only professor I've ever had, who had the courage to program live, IN CLASS. You learn a tonne from just watching!
So this class has a lot of issues. The first being that there is no definite textbook that the curriculum follows. There are no online notes and no powerpoints (everything is on the chalk board). No real organization in terms of resources. The assignments are long.  The only good thing is that he gave back tests to review for exams.
Not much guidance here but a lot of expectations for students to figure stuff out on their own
He makes it easy to learn if you are coding for the first time.
