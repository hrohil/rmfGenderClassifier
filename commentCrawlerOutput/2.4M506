Very unreasonable professor with a poor teaching style. Throughout his class lectures, he makes frequent mistakes in his code and it becomes hard to follow. There have been multiple situations when he mocks students performing poorly in his class and has been known to play personal favorites throughout the course. Take 312 with someone else
Hes fair but not unreasonable, has v clear expectations &amp; no wiggle room. His lectures are super boring &amp; I dont like them but idk how lecturing about coding could be crazy interesting. He can seem mean but I don't think it's personal, he just wants us to learn. Time spent on hw varies drastically person to person. Never touched my textbook once.
One of the worst professors i encountered in my undergraduate life. He is very bad lecturer and drops the lecture mid way if he cannot finish. He writes the code in class and is hesitant to compile it because he knows it has errors. He is a very mean person and won't think twice before calling you out in front of the class if you cannot answer him.
Nandakumar is the greatest of lecturer, but is projects are quite amazing for someone really interested in coding. If you are someone that does not like coding, DO NOT take him. But, if you are willing to put in the work and are really interested in coding-take him.
He is a really poor lecturer and explains concepts badly. He sometimes doesn't finish explaining a concept before trailing off. VERY few people pay attention in class because the lectures are confusing and unhelpful. Most students only show up to get their Clicker points. Projects are nightmares due to convoluted instructions and automated grading.
Very small office hour windows, lectures are confusing because he spends half the time debugging his code, a fourth on iClicker, and the last fourth on maybe actual content (ie reading slides from his other classes that he has taught). His projects are absolutely atrocious to try and decipher. Constantly changing criteria before the deadline.
Lecture are very boring but he is very helpful in office hours. Really like this professors office hours.
I would advise everyone to stay away from taking him unless you have prior programming knowledge. You literally MUST teach yourself everything from the book in order to get a good grade in this class. The "lectures" simply consist of students watching Nandakumar code.
He is a great professor. One of my favorites. Really nice guy. Would throw in pop culture references to keep the material interesting. Super helpful if you go to office hours.
He is such a sweet professor. He is always available during office hours and even helped me one weekend (phone and screen sharing). He does have an accent, but whatever. Very knowledgeable in several programming languages, java kinda of. Gets nervous in lecture but he is a master in 1-1. Read and practice, he likes that. Tests are okay.
Don't take this class from Nandakumar is you don't have to. He sucks, not very knowledgable, and pretty rude in his office hours.
Nandakumar is very friendly and helpful. Book is helpful, but not necessary. Someone implied he doesn't like questions, but this isn't true. He just doesn't answer questions irrelevant to what we're discussing (which is good for saving class time). And yeah, he makes some typing errors. Big whoop- it gives you an opportunity to correct him &amp; learn.
Receptive to feedback. Great about communicating with students via Piazza and email. Curves generously. This was his first semester, so he was a bit shaky at first. However, by the end, I found him very capable.
He doesn't teach the concept necessary to complete assignment. All he does in class is bring the printed codes and types the same. So it's like we go to his class to see his typing speed. makes lots of mistake in code. if we ask him more questions he gets annoyed and cross-questions us in order to get rid of us. Take Mike Scott instead !
Constant mistakes. Unclear. You basically teach your self in the class.
He always goes over the material, but he expects you to have read it beforehand. He gives lots of options(during lecture, TA's, office hours, piazza) to ask questions, and the class is not hard by any means.
Difficult to understand, mistakes in lectures
Doesn't cover anything relevant during lecture (rarely anyway). Not helpful answering questions. Code mistakes constant during examples. Assignment requirements are a joke.
