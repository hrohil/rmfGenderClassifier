His class was terrible. The lectures were unorganized and terribly dry. He teaches a narrow compiler toolset (lex/yacc) without teaching any concepts. Homework assignments involved lots of hand-holding and copying and pasting code. Altogether horrifying class, not from difficulty, but rather because of the quality of the teacher.
No one cares about compilers, but Oldham makes it bearable. He knows we don't want to write code for a compiler, so he does it for you and HWs make you go through the code instead of making you write it. His tests are mostly concepts. He's a genuinely nice guy.
His tests are easy as long as you pay attention in class (except for a few out-of-the-blue question), but the homework (40% of the grade) is an absolute nightmare.  He says in class to pretty much ignore the book, but then gives homework from it, and the book problems don't correspond with the book material, so you end up stuck with no way to do it
Avoid this man at all cost.
This guy simply cannot teach. He definately knows the topic very well and has lots of experience, but he makes no sense in class. He expects students to already have some knowledge on Java, even though it is an entry level class. The final project was very difficult and did not relate to anything in the class.
He's a guy who knows his stuff and is really enthusiastic about it. Does this translate into good teaching? Not always, but he puts in the effort. Homeworks can be hard but tests are pretty easy. I've heard hes much better than the other 281 profs.
He is easy, and still teaches the class pretty well. Homework is generally a joke. Project is to make a Java to C/C++ compiler. It is hard, but not too bad.
The guy simply cannot teach. His final project is nearly impossible even for advanced programmers. Even the TAs had trouble understanding the final project.
While his lectures tend to be confusing, if you keep up with reading assignments, you'll be fine. Also, if you have trouble with homework problems, you can email him and he's very good about helping you out.
Avoid at all costs. Oldham is a nice guy, but he cannot teach. His lectures are scatterbrained and he often skims over useful material in favor of long tangents. You will teach yourself most of his class. Luckily, he is also an easy grader, and his class usually has a good curve.
He's simply too smart to teach beginners computer programming. Some of the TAs are helpful. If you have no programming experience, get a tutor or you WILL be lost.
He is incomprehensible. This semester was the very first that he actually even reached the second half of the material for this course. You learn nothing but very specific facts about specific variables used in a specific Yacc/Bison compiler, while the book is instead incredibly abstract and does not mention the specific things we use . AVOID.
Do WHATEVER you can to take ENGR 131 with a different professor.  For use EECS people we are currently required to suffer through his compilers and logic class...
Nearly impossible assignments combined with his tangents make what should be a relatively easy class very hard. His final project is hard for even experienced Java programmers. He knows the subject matter very well, but he lacks the ability to teach. Unless you already know computer programming i'd steer clear of Dr. Oldham.
Goes on many tangents, referencing other languages and low-level computer science in a Java course. Seems uncomfortable teaching procedural coding. Last assignment and final project too difficult for 100-level course, especially since most of the students in the class aren't Computer Science majors.
Horrible Professor. He loves trick questions, talking about NASA, his sailtboat, and his girlfriend. Most of the class cheats off each other, so I recommend sitting alone to keep your academic integrity. Yeah, he's nice, but my grade isn't a reflection of now "nice" my professor is.
He's a good guy. Good engineer/programmers, crappy professor. That said, the guy admitted to not being good at teaching, a curved a lot. Take it seriously, read your book a lot. Actually doing the homework/programming teaches you what you need.
Go to class and read and you should not have a problem. Quizes and tests are generally easy. He can assign a lot of homework at times, but it generally is not too bad. His lectures are informative, but he often goes off-topic and talks about his work at NASA. It is obvious he has a passion for this stuff. Oh, he also has an original Galaga board.
I thought he was a great teacher, if you want to learn about real world experience. Java is a pretty hard concept for most new engineers who have never heard about computer programming or arent computer savvy. He's definitely the better of the 131 teachers. true his lectures go off topic, but hes a nice guy. alot better than the other 131 teachers
He is a nice guy, but he CANNOT teach Java. The lectures go off in some random direction.  The book isn't that easy to learn from either. I would get another book to help you teach yourself b/c you'll need to if you want to actually learn. That said, he curves so much that you can pass w/ minimal effort. Talk to the TAs! I learned most from them.
